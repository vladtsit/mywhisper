name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  DOTNET_VERSION: '8.0.x'
  SOLUTION_FILE: 'speech-agent.sln'

jobs:
  test:
    name: Run Tests
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore ${{ env.SOLUTION_FILE }}

    - name: Build for testing
      run: dotnet build ${{ env.SOLUTION_FILE }} --configuration Debug --no-restore

    - name: Run tests
      run: dotnet test ${{ env.SOLUTION_FILE }} --configuration Debug --no-build --verbosity normal --logger trx --results-directory TestResults/ --filter "Category!=Hardware"

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-windows
        path: TestResults/

  build-standalone:
    name: Build Standalone Executable
    needs: test
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore ${{ env.SOLUTION_FILE }}

    - name: Publish standalone executable
      run: |
        dotnet publish src/SpeechAgent.UI/SpeechAgent.UI.csproj `
          --configuration Release `
          --runtime win-x64 `
          --self-contained true `
          --output ./publish/win-x64 `
          /p:PublishSingleFile=true `
          /p:PublishReadyToRun=true `
          /p:IncludeNativeLibrariesForSelfExtract=true `
          /p:EnableCompressionInSingleFile=true `
          /p:DebugType=embedded

    - name: Rename executable
      run: |
        if (Test-Path "./publish/win-x64/SpeechAgent.UI.exe") {
          Rename-Item "./publish/win-x64/SpeechAgent.UI.exe" "SpeechAgent-win-x64.exe"
        }
      shell: powershell

    - name: Upload standalone executable
      uses: actions/upload-artifact@v4
      with:
        name: standalone-win-x64
        path: ./publish/win-x64/SpeechAgent-win-x64.exe
        retention-days: 30

  code-quality:
    name: Code Quality Check
    runs-on: windows-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore ${{ env.SOLUTION_FILE }}

    - name: Install code analysis tools
      run: dotnet tool install --global dotnet-format

    - name: Run code formatting check
      run: dotnet format --verify-no-changes --verbosity diagnostic

    - name: Run security scan
      run: dotnet list package --vulnerable --include-transitive

  create-release:
    name: Create Release
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: [test, build-standalone, code-quality]
    runs-on: windows-latest
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        pattern: standalone-*
        merge-multiple: true
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release v${{ github.run_number }}
        draft: false
        prerelease: false
        
    - name: Upload Windows Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./SpeechAgent-win-x64.exe
        asset_name: SpeechAgent-win-x64.exe
        asset_content_type: application/octet-stream
